workdir: "../.."

rule all:
    input:
        expand("figures/subject_{subject_id}/response_time{session_id}_hist.png", subject_id=['one', 'two'], session_id=[1,2])

# expand("figures/subject_{subject_id}/response_time{session_id}_hist.png", subject_id=['one', 'two'], session_id=[1,2])
# expand("data/processed/dataset{session_id}_clean.csv",session_id=[1,2])

""" rule clean_dataset:
    input: "data/raw/dataset{session_id}.csv"
    output: "data/processed/dataset{session_id}_clean.csv"
    run:
        import pandas as pd
        df = pd.read_csv(input[0])              # Use indexing since 'input' can contain multiple items
        df_clean = df.dropna()                  # remove rows with NaN values
        df_clean["session_id"] = wildcards.session_id   # add session_id as a column
        df_clean.to_csv(output[0], index=False) # Use indexing since 'output' can contain multiple items """


""" rule filter_dataset:
    input: "data/raw/subject_{subject_id}/task{session_id}.csv"
    output: "data/processed/subject_{subject_id}/task{session_id}_valid.csv"
    run:
        import pandas as pd
        df = pd.read_csv(input[0])              # Use indexing since 'input' can contain multiple items
        df_clean = df.dropna()                  # remove rows with NaN values
        df_valid = df[df.valid].copy()
        df_clean.to_csv(output[0], index=False) # Use indexing since 'output' can contain multiple items """


rule make_hist:
    input:
        "data/raw/subject_{subject_id}/response_time{session_id}.npy",
        "figures/colormap.csv"
    output: "figures/subject_{subject_id}/response_time{session_id}_hist.png"
    run:
        import numpy as np
        import matplotlib.pyplot as plt
        import pandas as pd
        data = np.load(input[0])
        cmp = pd.read_csv(input[1], sep=',', header=0)
        tmpcol = cmp.loc[cmp['subject_id'] == wildcards.subject_id, 'color']
        print(tmpcol)
        #plt.hist(data, color=tmpcol)
        #plt.savefig(output[0])